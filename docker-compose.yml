version: '3.8'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel_app
    container_name: app
    restart: unless-stopped
    ports:
      - "5173:5173"
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
    depends_on:
      - db
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "8005:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  db:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: db
    platform: 'linux/x86_64'
    container_name: db
    restart: unless-stopped
    volumes:
      - dev_db:/var/lib/mysql
    ports:
      - "3316:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_TEST_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootpassword
    command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON --skip-innodb-file-per-table --server-id=1 --lower_case_table_names=1
    networks:
      - app-network

  db_test:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: db
    platform: 'linux/x86_64'
    container_name: db_test
    restart: unless-stopped
    ports:
      - "3317:3306"
    environment:
      MYSQL_DATABASE: laravel_test
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: rootpassword
    command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON --skip-innodb-file-per-table --server-id=1 --lower_case_table_names=1
    networks:
      - app-network
      
  selenium:
    image: selenium/standalone-chrome
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - "4444:4444"
      - "7900:7900"
    networks:
      - app-network
      
  adminer:
    image: adminer
    ports:
      - "8085:8080"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dev_db:
    driver: local
